# -*- python -*-
Import("env")
Import("libProducts")
Import("defaultTgts")
Import('findLibs')
Import('cacheObjs')

import glob
import itertools

def imposeStaticObj(f):
    if str(f).endswith(".cc"):
        return env.StaticObject(f)[0]
    else:
        return f

def getDerived(m):
    if m in defaultTgts:
        return map(imposeStaticObj, defaultTgts[m])
    else:
        return map(imposeStaticObj, libProducts[m])


programs = []

# deps on other modules
modDeps = """global log proto query rproc mysql sql util""".split()

deps = itertools.chain(*map(getDerived, modDeps))
deps = map(lambda i:i, deps) # un-chain
# Try to keep dependencies ordered to reduce re-builds
deps.sort(key=lambda n: n.str_for_display())
#print "test deps~~~~~~~", map(lambda n: n.str_for_display(), deps)

myDeps = filter(lambda i: not str(i).startswith("test"), env.Glob("*.cc"))
ubuntuDeps = ["pthread"]
extDeps = ubuntuDeps + "boost_regex mysqlclient_r boost_thread boost_system crypto log log4cxx protobuf".split()
p = env.Program(["testIter.cc"] + deps, LIBS=findLibs(extDeps))

programs.append(p)

Return('programs')
