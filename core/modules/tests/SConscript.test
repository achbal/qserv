# -*- python -*-
Import("env")
Import("libProducts")
Import("defaultTgts")
Import('findLibs')
import glob
import itertools

def getDerived(m):
    if m in defaultTgts: return defaultTgts[m]
    else: return libProducts[m]

programs = []

# deps on other modules
modDeps = """log rproc mysql sql util xrdc""".split()

deps = itertools.chain(*map(getDerived, modDeps))
deps = map(lambda i:i, deps) # un-chain
# Try to keep dependencies ordered to reduce re-builds
deps.sort(key=lambda n: n.str_for_display())
#print "test deps~~~~~~~", map(lambda n: n.str_for_display(), deps)

myDeps = filter(lambda i: not str(i).startswith("test"), env.Glob("*.cc"))
extDeps = "boost_regex mysqlclient_r boost_thread boost_system crypto XrdPosix XrdPosixPreload XrdClient XrdUtils".split()
p = env.Program(["testIter.cc"] + deps, LIBS=findLibs(extDeps))

programs.append(p)

Return('programs')
