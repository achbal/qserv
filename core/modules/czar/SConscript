# -*- python -*-
# Qserv czar SConscript
import distutils.sysconfig
import state
import cctarget
import pytarget

Import('env')
Import('extraTgts')

def _debug_dist_target():
    if state.log.verbose:
        template = "\t{SRCFILE:80} {INSTALLPATH}\n"
        log_msg = template.format(SRCFILE="SOURCE FILE", INSTALLPATH="INSTALL PATH")
        for (path, f) in extraTgts['dist']:
            log_msg += template.format(SRCFILE=str(f), INSTALLPATH=path)
        state.log.debug("extraTgts['dist']:\n" + log_msg)

# Manual dependencies for czarLib.i, because the SCons SWIG builder
# isn't knowledgeable enough to ensure their presence when using VariantDir
depends = ['css/StripingParams.h',
           'query/Constraint.h',
           'qdisp/ChunkMeta.h',
           'qproc/ChunkSpec.h',
           'rproc/TableMerger.h',
           'rproc/mergeTypes.h',
           'util/Substitution.h']
depends = map(lambda f: env.File("../"+f), depends)

pythonInc = distutils.sysconfig.get_python_inc()
cppPath = cctarget.getList(env, 'CPPPATH') + [pythonInc]
swigged = env.SharedObject(source="czarLib.i",
                           SWIGFLAGS=['-python', '-c++', '-Iinclude'],
                           SWIGPATH=['..', pythonInc],
                           CPPPATH=cppPath,
                           LDMODULEPREFIX='_',
                           LDMODULESUFFIX = '.so',
                           )

swigged_tgt = []
for f in swigged:
    swigged_tgt.append(env.File(f))

env.Depends(swigged_tgt, depends)

# Create entry for python file, which SCons SWIG builder ignores
pySwig = env.File('czarLib.py')
#env.Depends(pySwig, swigged[0]) # This causes a cycle (why?),
# but "scons --tree=all" shows that a sufficient dep
# is already there (on czarLib.i)
extraTgts["czarLib.py"] = pySwig

distTgts = swigged_tgt + [pySwig]
pyTargets = pytarget.getPyTargets(env, ["lsst","qserv","czar"], distTgts)
extraTgts['dist'].extend(pyTargets)

for f in env.Glob("bin/*py"):
    extraTgts['dist'].append(('bin', f))

_debug_dist_target()

extraTgts["czarPy"] = distTgts
Return('swigged_tgt')
