# -*- python -*-
# top level

## Include the protoc, antlr, and swig builder tools
env = Environment(tools=['default', 'protoc', 'antlr', 'swig'])

# Setup the #include paths
env.Append(CPPPATH="modules")


# Set the build directory using "scons bld=path/to/builddir"
buildDir = ARGUMENTS.get('bld', 'bld')
print "Building into", buildDir

# Trigger the modules build.
SConscript('modules/SConscript', variant_dir=buildDir, duplicate=1,
           exports=['env', 'ARGUMENTS'])


# Alias("install", [env.Install(env['prefix'], "python"),
#                   env.Install(env['prefix'], "include"),
#                   env.Install(env['prefix'], "lib"),
#                   env.InstallAs(os.path.join(env['prefix'], "doc", "doxygen"),
#                                 os.path.join("doc", "htmlDir")),
#                   env.InstallEups(os.path.join(env['prefix'], "ups"))])

# #
# # Build TAGS files
# #
# files = scons.filesToTag()
# if files:
#     env.Command("TAGS", files, "etags -o $TARGET $
