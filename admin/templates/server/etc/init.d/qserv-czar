#!/bin/sh
#
# qserv-czar  This shell script takes care of starting and stopping
#	      Qserv czar.
#
# description: qserv-czar is the Qserv czar service \
# It receive SQL queries process it and send it to Qserv workers \
# and then it returns the results it to mysql-proxy. \
# Note that Qserv service won't start if CSS database is empty.

### BEGIN INIT INFO
# Provides: qserv-czar
# Short-Description: start and stop qserv czar
# Description: qserv-czar is the Qserv czar service \
#              It receive SQL queries process it and send it to Qserv workers \
#              and then it returns the results it to mysql-proxy. \
#              Note that Qserv service won't start if CSS database is empty.
### END INIT INFO

# Source functions library.
# WARN : this may clean environment
. %(QSERV_RUN_DIR)s/etc/init.d/qserv-functions

NAME="qserv-czar"
DAEMON=${NAME}

QSERV_RUN_DIR=%(QSERV_RUN_DIR)s

START=startCzar.py
CONFIG=%(QSERV_RUN_DIR)s/etc/local.qserv.cnf
pidfile=%(QSERV_PID_DIR)s/${NAME}.pid
lockfile=${QSERV_RUN_DIR}/var/lock/subsys/${NAME}
LOGFILE=%(QSERV_LOG_DIR)s/${NAME}.log
starttimeout=1

export PATH=%(PATH)s
export PYTHONPATH=%(PYTHONPATH)s

export QSW_RESULTDIR=${QSERV_RUN_DIR}/qserv-run/tmp
# Disabling buffering in python in order to enable "real-time" logging.
export PYTHONUNBUFFERED=1

cmd="${PYTHON} ${START} -c ${CONFIG} > ${LOGFILE} 2>&1 &"

start_cmd() {
    start -p $pidfile -l $lockfile -t ${starttimeout} $NAME "${cmd}"
}

stop_cmd() {
    stop -p $pidfile -l $lockfile $NAME
}

# See how we were called.
case "$1" in
    start)
        start_cmd
        ;;
    stop)
        stop_cmd
        ;;
    restart)
        stop_cmd
        start_cmd
        ;;
    condrestart|try-restart)
        if status_of_proc -p ${pidfile} "$DAEMON" "$NAME" >&/dev/null; then
            stop_cmd
            start_cmd
        fi
        ;;
    status)
        status_of_proc -p ${pidfile} "$DAEMON" "$NAME" && exit 0 || exit $?
        ;;
    *)
        echo "Usage: $0 {start|stop|restart|reload|status|condrestart|try-restart}"
        exit 2
        ;;
esac

exit $?
