# Unified configuration for xrootd/cmsd for both manager and server instances
# "if"-block separates manager-only and server-only configuration.

# if regexp block.  Test whether the hostname matches the regexp,
# Example: tuson121 is the hostname of our manager node within our
# allocation at LLNL.

###################################################################################
# WARNING : for mono-node installation, comment manager configuration, and
# don't start cmsd
###################################################################################

############
# if manager
############
%(COMMENT_MONO_NODE)sif %(XROOTD_MANAGER_HOST)s*
# Use manager mode
%(COMMENT_MONO_NODE)sall.role manager

# Use standard filesystem plugin
# Newer xrootd uses embedded plugin by default, uncomment for older xrootd
#%(COMMENT_MONO_NODE)sxrootd.fslib libXrdOfs.so

##########################
# else: non-manager nodes
##########################
%(COMMENT_MONO_NODE)selse

# Use server mode
all.role server

# Use qserv worker filesystem plugin
# default path is %(QSERV_RUN_DIR)s/xrootd-run/
xrootd.fslib %(QSERV_DIR)s/lib/libxrdfs.so
ofs.osslib %(QSERV_DIR)s/lib/libxrdoss.so

# Set pathname for file location resolution.
# i.e., pathname/somefile will be exported in the xroot URL:
# xroot://manager:0000/somefile
oss.localroot %(XROOTD_RUN_DIR)s

# Do not change.  This directive tries to lower the minimum free disk space
# for "file" writes (which are subquery writes in our case).
cms.space linger 0 recalc 15 min 10m 11m

# Use asyncronous filesystem API when interfacing with filesystem plugin
# (qserv-worker plugin is tested using this configuration)
xrootd.async force
%(COMMENT_MONO_NODE)sfi

########################################
# Shared directives (manager and server)
########################################

# Writable paths for administration
# cmsd and xrootd paths for pid
all.pidpath %(QSERV_PID_DIR)s
# path to write logging and other information
all.adminpath %(XROOTD_ADMIN_DIR)s

# host:port of manager instance (2131 is default)
%(COMMENT_MONO_NODE)sall.manager %(XROOTD_MANAGER_HOST)s:%(CMSD_MANAGER_PORT)s

# Do not change. This specifies valid virtual paths that can be accessed.
# "nolock" directive prevents write-locking and is important for qserv
# qserv is hardcoded for these paths.
all.export /q/ nolock
all.export /result/ nolock

xrd.port %(XROOTD_PORT)s

# Optional: Prevent dns resolution in logs.
# This may speed up request processing.
xrd.network nodnr

