* TESTS
** TODO qservMeta index db must be prefixed by LSST_, it would be better if it could be the name of the database containing data on the worker nodes instead
** DONE tests/runTest.py works
* SCONS
** TODO scons : scons -c templates seems to remove python-admin
but scons templates does not install it
** TODO scons : install auto of scisql
** TODO improve scons clean_all, with dir emptying/cleaning (spécifique pour build/ et suppr fichier dans QSERV_BASE)
** TODO scons qserv-only : it would be interesting to clean/remove qserv before re-installing ?
** DONE scons : recopier le fichier de paramètre par défaut dans SConstruct
** TODO tuer tous les process de qserv avant une nouvelle install
** TODO make scons master, and scons worker targets
* SYSADMIN
** TODO create symlinm for tmp dir if not in default location
** TODO remove useless parameters in qserv-install, induced by scons templates procedure
** TODO remove mysql password from log
** TODO add a note  on qserv.cnf
"alloweddbs=LSST,qservTest_case01_q" after "prohibit" C++ message
** TODO add a qserv command for reloading qserv parameters
*OTHER  
** TODO il faut faire un patch des makefile de xrootd pour debian.
** TODO find bug due to slow request in tests  
** TODO comment "stop iptables" in french wiki, or better, add correct iptables
** TODO AUDIT DE CODE
bad quality code examples :  
- qMaster::SqlParseRunner::_interpretBadDbs
* DONE Is installation of mysql UDF plugin (libqserv_udf.so) usefull, because
* this file isn't created by build process and its installation isn't done by
* the qserv-install script ?
  but it is specified several time in the documentation :
  cf ./qserv-0.3.0rc3/worker/doc/HOWTO_install_udf.txt
  cf http://dev.lsstcorp.org/trac/wiki/dbQservDevelopmentInstallationGuide

* DONE current minor modification proposal :
  - [X] proposer de tuer les process avec des pid files (changer les chemins
    de ceux-ci vers /opt/qserv/var/run/xrootd dans lsp.cf et ajout pour
startQserv.py)  SLAC
  - [X] préciser dans la doc qu'il faut installer numpy et faire un export de
    PYTHONPATH avant de partitionner
    yum install numpy
    export PYTHONPATH=/usr/lib64/python2.6/site-packages/
  - [ ] dans qserv-admin, pour --start, mettre un die() si system() ne
    fonctionne pas.
  - [ ] script de deletion/recreation des tables pour qserv-install : a faire
  - [X] soumettre les modifs de qserv-admin (pour dbpass)
  - [X] qserv-install : démarrer cmsd avant xrootd pour éviter le message :
    120809 15:02:49 24278 XrdOpen: Unable to connect socket to
clrlsst-dbmaster.in2p3.fr; connection refused
* rules for xrootd/cmsd
* DONE error redirection to stdout)
   :PROPERTIES:
   :SEND:     OK
   :END: 
Qserv log are only displayed when stdout buffer is flushed by python (in
practice this is when i launch qserv-admin --stop).
It seems better to have "real time" log, by disabling buffering in python :

cat /opt/qserv/start_qserv
---
...
export PYTHONUNBUFFERED=1
$PYTHON /opt/qserv/qserv/master/dist/startQserv.py -c
/opt/qserv/etc/local.qserv.cnf &> /opt/qserv/var/log/qserv.log &
---

Furthermore, it seems better to log to /opt/qserv/var/log/qserv.log, than to
/opt/qserv/xrootd-run/qserv.log, and errors should also be redirected to this
file (add of & before >)

Could all this minor modifications be integrated please ?

* DONE questions about data loading :
   :PROPERTIES:
   :SEND:     OK
   :END: 
** several scripts can be used to load data
   - qserv-0.3.0rc3/admin/qserv-admin : the one I use, seems to successfully
     load pt1.1 data in the master database, is it possible to also load data
in worker(s) database with this script ?
       here's the command I launch to partition and load data, on the master,
it seems to work fine :
       # in order to load numpy of the SL distribution
       export PYTHONPATH=/usr/lib64/python2.6/site-packages/
       qserv-admin --partition --source /data/qserv/pt11/ --table Object
--output /data/qserv/pt11_partition/
       qserv-admin --load --source /data/qserv/pt11/ --table Object --output
/data/qserv/pt11_partition/

  - qserv-0.3.0rc3/master/examples/loader.py : 
    online documentation references this script :
http://dev.lsstcorp.org/trac/wiki/dbQservDevelopmentInstallationGuide
    and 
    $> python loader.py --help 
    gives full help, this seems to load data in worker and master, but not
used by qserv-admin, why ? It this script stills usefull ?
  - qserv-0.3.0rc3/tests/runTests.py : seems to load small test data, can a
    worker be feeded by this, or only the master ?
  
** DONE Solution : Add of qservMeta : 
error detected while launching an SQL request after having followed steps
described in qserv-admin :

Using a standard Debian mysql client :

$> mysql --host clrlsst-dbmaster.in2p3.fr --port 4040 --user qsmaster LSST 

mysql> select * from Object where objectId=1;
ERROR 4005 (Proxy): rpc call failed for http://127.0.0.1:7080/x

On the server :

$> cat /opt/qserv/var/log/qserv.log
---
Starting Qserv interface on port: 7080
/usr/lib64/python2.6/xmlrpclib.py:612: DeprecationWarning: The xmllib module
is obsolete.  Use xml.sax instead.
  import xmllib # lazy subclassing (!)
DEBUG : sql :  SELECT x_chunkId FROM qservMeta.LSST__Object WHERE objectId IN
(1);
Unhandled Error
Traceback (most recent call last):
  File
"/opt/qserv/lib/python2.6/site-packages/Twisted-12.0.0-py2.6-linux-x86_64.egg/twisted/web/server.py",
line 132, in process
    self.render(resrc)
  File
"/opt/qserv/lib/python2.6/site-packages/Twisted-12.0.0-py2.6-linux-x86_64.egg/twisted/web/server.py",
line 167, in render
    body = resrc.render(self)
  File
"/opt/qserv/lib/python2.6/site-packages/Twisted-12.0.0-py2.6-linux-x86_64.egg/twisted/web/resource.py",
line 216, in render
    return m(request)
  File
"/opt/qserv/lib/python2.6/site-packages/Twisted-12.0.0-py2.6-linux-x86_64.egg/twisted/web/xmlrpc.py",
line 172, in render_POST
    d = defer.maybeDeferred(function, *args)
--- <exception caught here> ---
  File
"/opt/qserv/lib/python2.6/site-packages/Twisted-12.0.0-py2.6-linux-x86_64.egg/twisted/internet/defer.py",
line 134, in maybeDeferred
    result = f(*args, **kw)
  File
"/opt/qserv/qserv-0.3.0rc3/master/dist/lsst/qserv/master/appInterface.py",
line 83, in submitQuery
    return self.submitQueryWithLock(query, conditions)
  File
"/opt/qserv/qserv-0.3.0rc3/master/dist/lsst/qserv/master/appInterface.py",
line 111, in submitQueryWithLock
lambda e: lock.addError(e), resultName)
  File "/opt/qserv/qserv-0.3.0rc3/master/dist/lsst/qserv/master/app.py", line
703, in __init__
    self._evaluateHints(hints, pmap) # Also gets new dbContext
  File "/opt/qserv/qserv-0.3.0rc3/master/dist/lsst/qserv/master/app.py", line
832, in _evaluateHints
    chunkIds = self._getChunkIdsFromObjs(ids)
  File "/opt/qserv/qserv-0.3.0rc3/master/dist/lsst/qserv/master/app.py", line
870, in _getChunkIdsFromObjs
    cids = db.applySql(sql)
  File "/opt/qserv/qserv-0.3.0rc3/master/dist/lsst/qserv/master/db.py", line
94, in applySql
    c.execute(sql)
  File "build/bdist.linux-x86_64/egg/MySQLdb/cursors.py", line 174, in execute
    
  File "build/bdist.linux-x86_64/egg/MySQLdb/connections.py", line 36, in
defaulterrorhandler
    
_mysql_exceptions.ProgrammingError: (1146, "Table 'qservMeta.LSST__Object'
doesn't exist")
---

And database qservMeta and table LSST__Object seems to be referenced only in
qserv-0.3.0rc3/tests/runTests.py.
But runTests.py isn't launch by qserv-0.3.0rc3/admin/qserv-admin, which
doesn't create either qservMeta or LSST__Object.

What can i do to solve this problem ? Modify a configuration parameter in
/opt/qserv/etc/local.qserv.cnf (default is db=qservMeta in [mgmtdb] section of
qserv.cnf), or launch the runTest.py script before qserv-admin
) , or  ?

* DONE voir pour récupérer le chemin du fichier courant SConstruct (Dir(#) ??)
* DONE update README.txt with scons, and tell about source
  /opt/qserv-dev/qserv-env.sh in ~/.bashrc
* DONE test pt11 data loading procedure
  admin/python/lsst/qserv/admin/datamanager.py --config-dir home/fjammes/src/qserv/
  and run them via a py main script in admin/bin
* DONE stop scons on download error : use urlretrieve in site_scons/actions.py

* DONE A TESTER : changement du mdp dans qserv-install :
/opt/qserv-dev/bin/mysqladmin -u root password 'new-password'
/opt/qserv-dev/bin/mysqladmin -u root -h fjammes-laptop password 'new-password'

- print "SUCCESS" at the end of qserv-install step, (with a small file install.ok ?)

- dans qserv-init : perl sur /etc/mysql/my.cnf à optimiser (tab et espace)

* DONE commit tickets/in2p3-patch to master branch, 
* DONE in qserv_install replace dir QSERV_BASE/var/log with a symlink pointing
to /var/log/qserv for example, same thing for mysql data 
* DONE répondre au courriel de SLAC :
  + pb QSW_MYSQLDUMP : ok slac
  + pb mysql : pas ok slac
  + script de deletion/recreation des tables : a faire
  + compte git : ok
  + soumettre les modifs de qserv-admin (pour dbpass)

* DONE modify  /opt/qserv/start_qserv to manage qserv log (path + unbuffered +

* DONE est ce que 2>&1 fonctionne bien ???, 2&> semble meieux fonctionner ???
* DONE in mono-node, share a different lsp.cf with no manager section

